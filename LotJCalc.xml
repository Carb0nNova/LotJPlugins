<?xml version="1.0" encoding="iso-8859-1" ?> 
<!DOCTYPE muclient> 
<!--  Saved on Sunday, July 04, 2012, 6:29 PM   -->  
<muclient>
<plugin name="LotJCalc" author="@Johnson" id="b2c06b3dcc775c0ede861316" language="Lua" purpose="Calculate Sectors Easily" save_state="y" requires="4.40" version="1.04">
<description trim="y">
<![CDATA[ 
Automatically calculate hyperjumps to the specified sector.
  ]]> 
  </description>
  </plugin>
<!--   Get our standard constants   --> 
  <include name="constants.lua" /> 
<!--   Triggers    --> 
<triggers>

  <trigger enabled="n" group="CalcStart" match="^You use the datapad to lookup the information\.$" name="ShowplanetSuccess" script="showplanetSuccess" regexp="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger>
  <trigger enabled="n" group="CalcStart" match="^No such planet\.$" name="ShowplanetFailure" script="showplanetFailure" regexp="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger> 
  <trigger enabled="n" group="CalcCap" match="^Planet\: (.*)$" name="PlanetCap" script="planetCheck" regexp="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger>
  <trigger enabled="n" group="CalcCap" match="^Starsystem\: (.*)$" name="SystemCap" script="setSystem" regexp="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger>
  <trigger enabled="n" group="CalcCap" match="^Coordinates\: (.*) (.*) (.*)$" name="CoordCap" script="setCoords" regexp="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger>
  <trigger enabled="n" group="GagAll" match="^(.*)$" name="GagAll" regexp="y" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100"></trigger>
  <trigger enabled="n" group="CalcCap" match="^Use \'SHOWPLANET \<planet\> RESOURCES\' for current resources\.$" name="CalcEnd" regexp="y" omit_from_log="y" omit_from_output="y" script="calculate" sequence="100"></trigger>
  </triggers>
<!--   Aliases    --> 
<aliases>
  <alias name="calculate" script="showPlanet" match="^calculate (.*)$" enabled="y" regexp="y" group="LotJCalc" sequence="100"></alias>
  <alias name="calc" script="showPlanet" match="^calc (.*)$" enabled="y" regexp="y" group="LotJCalc" sequence="100"></alias>
  </aliases>
<!--   Script    --> 
<script>
<![CDATA[ 
local planets = {}
local planetname = ""
local systemname = ""
local coordX = 0
local coordY = 0
local coordZ = 0

function showPlanet(name, list, args)
	if (args[1] ~= nil and args[1] ~= "stop") then
		planetname = Trim(args[1])
		Send("showplanet '" .. planetname .. "'")
		EnableTriggerGroup("CalcStart", true)
	elseif (args[1] == "stop") then
		Send("calculate stop")
	else
		Note("Invalid planet name!")
	end
end

function showplanetSuccess(name, list, args)
	toggleOn()
	gagOn()
end

function showplanetFailure(name, list, args)
	toggleOff()
	gagOff()
	ColourNote("red", "", "Planet lookup failed.")
end

function planetCheck(name, list, args)
	if (args[1] ~= nil) then
		if (string.lower(planetname) == string.lower(args[1])) then
			return true
		end
	end
	ColourNote("red", "", "Invalid planet found.")
	toggleOff()
	gagOff()
	return false
end

function calculate(name, list, args)
	local newX = coordX + 500
	Send("calculate '" .. systemname .. "' " .. newX .. " " .. coordY .. " " .. coordZ)
	toggleOff()
	gagOff()
end

function toggleOn(name, list, args)
	EnableTriggerGroup ("CalcCap", true)
end

function toggleOff(name, list, args)
	EnableTriggerGroup ("CalcCap", false)
	EnableTriggerGroup ("CalcStart", false)
end

function gagOn(name, list, args)
	EnableTrigger ("GagAll", true)
end
function gagOff(name, list, args)
	EnableTrigger ("GagAll", false)
end

function setSystem(name, list, args)
	if (args[1] ~= nil) then
		systemname = args[1]
		ColourNote("green", "", "System found: " .. systemname)
	else
		ColourNote("red", "", "Invalid system name!")
	end

end

function setCoords(name, list, args)
	if ((args[1] ~= nil) and (args[2] ~= nil) and (args[3] ~= nil)) then
		coordX = args[1]
		coordY = args[2]
		coordZ = args[3]
		ColourNote("green", "", "Coordinates found: " .. coordX .. ", " .. coordY .. ", " .. coordZ)
	else
		ColourNote("red", "", "Invalid number of coordinate arguments!")
	end
end
  ]]> 
  </script>
  </muclient>