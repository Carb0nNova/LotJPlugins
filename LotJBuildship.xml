<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, July 04, 2012, 2:02 AM -->
<!-- MuClient version 4.43 -->

<!-- Plugin "LotJBuildship" generated by Plugin Wizard -->

<muclient>
<plugin
   name="LotJBuildship"
   author="@Ilyena and @Flek"
   id="48dbd8f76a18f61774974d3a"
   language="Lua"
   purpose="Making ship building easier"
   save_state="y"
   date_written="2012-07-04 02:02:58"
   requires="4.43"
   version="1.34"
   >
<description trim="y">
<![CDATA[
Original script written by @Ilyena and @Flek.
Heavily modified by @Johnson.
Use buildhelp to see the commands.

Changelog
1.34-
Increased functionality of buildadd command to include multiple ships.
Example: 'buildadd ship1,ship2,ship3,ship4,ship5'
This string adds as many ships as you specify with a single command.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger name="FinishedShipMove" script="buildNext"  match="^You step away from your finished (.*)!$" enabled="n" group="Shipbuilding" regexp="y" sequence="100" />
  <trigger name="CopyoverCoverage" script="buildShip" match="^(.*)\[ALERT\]\: EMERGENCY COPYOVER \- Keep calm\, we might pull through\!$" enabled="n" group="Shipbuilding" regexp="y" sequence="100" />
  <trigger name="CopyoverProtection" script="buildShip" match="^(.*) COPYOVER by (.*) \- please remain seated\!$" enabled="n" group="Shipbuilding" regexp="y" sequence="100" />
  <trigger name="GetShipParts" script="getParts" match="You don't have a component like that." enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="afkOn" script="afkOn" match="You are now afk." enabled="y" group="AFKTracker" sequence="100" />
  <trigger name="afkOff" script="afkOff" match="You are no longer afk." enabled="y" group="AFKTracker" sequence="100" />
  <trigger name="BadBuildShip"  script="buildShip" match="Where to begin? It all looks so complex..." enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="FailedBuildShip" script="buildShip" match="You step away from *, and realize you've done it all wrong..." enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="MoveOnToNextPart" script="buildNextPart" match="^Your (.*) doesnt need any( (.*))? of that\.$" enabled="n" regexp="y" group="Shipbuilding" sequence="100" />
  <trigger name="ContinueTheShip" script="buildShip" match="You finish modifying the ship." enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="ShipBotting" script="ReturnFromAFK" match="You may now bot again." enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="MoveToNextShip" script="buildNext" match="You don't see a ship like that nearby to work on." enabled="n"  group="Shipbuilding" sequence="100" />
  <trigger name="ResumeonConnect" script="buildShip" match="^Show what to whom\?$" enabled="n" group="Shipbuilding" sequence="100" />
  <trigger name="SpamRemoval1" match="^(.*) steps away from (.*) looking very pleased with (.*)\.$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval2" match="^(.*) takes (.*) tools and starts to work on (.*)$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval3" match="^(.*)droid assists(.*)$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval4" match="^(.*) (gets|drops) (.*)$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval5" match="^You (.*) engineering experience\.$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval6" match="^Your droid gains (.*) experience points\.$" enabled="n" regexp="y" group="ShipbuildingSpam" keep_evaluating="y" omit_from_log="y" omit_from_output="y" sequence="100" />
  <trigger name="SpamRemoval7" match="^$" regexp="y" group="ShipbuildingSpam" enabled="n" keep_evaluating="y" omit_from_output="y" omit_from_log="y" sequence="100" />
</triggers>

<!--  Aliases  -->

<aliases>
  <alias name="BuildAuto" script="buildAuto" match="^buildAuto(.*)?$" enabled="y" group="AutoBuildCmd" regexp="y" ignore_case="y" sequence="100" />
  <alias name="BuildSpam" script="buildSpam" match="^buildSpam(.*)?$" enabled="y" group="ShipbuildingCmd" regexp="y" ignore_case="y" sequence="100" />
  <alias name="AddShipToQueue" script="addShip" match="buildadd *" enabled="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="ClearBuildList" script="clearList" match="buildclear" enabled="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="ShowShipQueue" script="showList" match="buildlist" enabled="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="Endurancetoggle" script="enduranceToggle" match="^buildendurance(.*)?" enabled="y" regexp="y" group="Shipbuilding" sequence="100" />
  <alias name="PartNames" script="setPartname" match="^buildpartname (.*) (.*)$" enabled="y" group="ShipbuildingCmd" regexp="y" sequence="100" />
  <alias name="ShowPartNames" script="showPartnames" match="buildpartslist" enabled="y" ignore_case="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="BuildShip" script="buildShip" match="buildship" enabled="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="BuildStart" script="buildStart" match="buildstart" ignore_case="y" enabled="y" group="ShipbuildingCmd" sequence="100" />
  <alias name="BuildNext" script="buildNext" match="buildnext" enabled="y" group="Shipbuilding" ignore_case="y" sequence="100" />
  <alias name="BuildNextPart" script="buildNextPart" match="buildnextpart" enabled="y" group="Shipbuilding" ignore_case="y" sequence="100" />
  <alias name="DisplayBuildCommands" script="BuildCommandHelp" match="buildhelp" enabled="y" group="ShipbuildingCmd" sequence="100" />
</aliases>

<!--  Timers  -->

<timers>
  <timer name="EnduranceMode" script="buildShip" enabled="n" second="5.40" offset_second="0.00" group="Shipbuilding" />
</timers>

<!--  Script  -->


<script>
<![CDATA[
shipParts = {"hull", "circuits", "weapons", "engines"}
partNames = {
	GetVariable("hullpart") or "hull", 
	GetVariable("circuitspart") or "circuits", 
	GetVariable("weaponspart") or "weapons", 
	GetVariable("enginespart") or "engine"
	}
shipQueue = {}
endurance = false
afk = false
autoBuild = false
shipSpam = false
currentShip = 0
currentPart = 0

function addShip(name, line, wildcards)
	local addLines = utils.split(wildcards[1], ",")
	if addLines then
		for i=1,#addLines, 1 do
			shipQueue[#shipQueue + 1] = addLines[i]
			ColourNote("lawngreen", "black", "Added '" .. shipQueue[#shipQueue] .. "' to ship queue.")
		end
	else
		shipQueue[#shipQueue + 1] = wildcards[1]
		ColourNote("lawngreen", "black", "Added '" .. shipQueue[#shipQueue] .. "' to ship queue.")
	end
end -- function

function buildStart(name, line, wildcards)
	if (autoBuild) then  --  if you were previously building	
		for i = 1, #partNames, 1 do
			Send("drop all." .. partNames[i]) -- drop all previously used parts to start fresh
		end -- for
	end
	if (#shipQueue > 0) then -- we have stuff to build!
		currentShip = 0
		toggleOn()
		toggleSpamOn()
		buildNext()
	else -- nothing to build!
		abort()
	end
end -- function

function buildShip(name, line, wildcards)
	if (shipQueue[currentShip]) then
		Send("buildship " .. shipQueue[currentShip] .. " " .. shipParts[currentPart])
	else
		abort()
	end
end

function buildNext(name, line, wildcards)
	if (autoBuild) then  --  if you were previously building	
		for i = 1, #partNames, 1 do
			Send("drop all." .. partNames[i]) -- drop all previously used parts to start fresh
		end -- for
	end
	currentShip = currentShip + 1
	if (currentShip > #shipQueue) then -- if we're at the end of the list
		abort()
	else
		currentPart = 0
		buildNextPart()
	end
end -- function

function abort(name, line, args)
	ColourNote("lawngreen", "black", "Shipbuilding complete.")
	disableEndurance()
	toggleSpamOff()
	toggleOff()
	for i = 1, #partNames, 1 do
		Send("drop all." .. partNames[i])
	end -- for
end

function buildNextPart(name, line, wildcards)
	if (currentPart > 0) then
		Send("drop all." .. partNames[currentPart])
	end
	currentPart = currentPart + 1
	if (currentPart > #partNames) then
		currentPart = 1
	end -- if
	getParts()
end -- function

function ReturnFromAFK(name, line, wildcards)
	if (afk) then
		Send("afk")
	end
	Send("bot start")
	if (endurance == true) then
		enableEndurance()
	else
		buildShip()
	end -- if
end -- function

function getParts(name, line, wildcards)
	Send("get 100 " .. partNames[currentPart])
	buildShip()
end -- function


function setPartname(name, line, wildcards)
	if (wildcards[1] == "hull") then
		partNames[1] = wildcards[2]
		ColourNote("lawngreen","black","Part type '" .. shipParts[1] .. "' coupled with '" .. partNames[1] .. "'")
	elseif (wildcards[1] == "circuits") then
		partNames[2] = wildcards[2]
		ColourNote("lawngreen","black","Part type '" .. shipParts[2] .. "' coupled with '" .. partNames[2] .. "'")
	elseif (wildcards[1] == "engines") then
		partNames[3] = wildcards[2]
		ColourNote("lawngreen","black","Part type '" .. shipParts[3] .. "' coupled with '" .. partNames[3] .. "'")
	elseif (wildcards[1] == "weapons") then
		partNames[4] = wildcards[2]
		ColourNote("lawngreen","black","Part type '" .. shipParts[4] .. "' coupled with '" .. partNames[4] .. "'")
	else
		ColourNote("red","","Part type not found")
	end -- if
	OnPluginSaveState()
end -- function

function showPartnames()
	Note("Partnames are as follows: ")
	for i, v in ipairs(shipParts) do
		if (currentPart == i) then
			ColourNote("lawngreen","black", "--]>" .. shipParts[i] .. " = " .. partNames[i] .. "<[--")
		else
			Note(shipParts[i] .. " = " .. partNames[i])
		end
	end -- for
end -- function

function showList()
	Note("Ship Queue Contains: ")
	for i, v in ipairs(shipQueue) do
		if (currentShip == i) then
			ColourNote("lawngreen","black", "--]>"..i..") "..shipQueue[i].."<[--")
		else
			Note(i..") "..shipQueue[i])
		end
	end -- for
	showPartnames()
end -- function


function afkOn(name, list, args)
	afk = true
end

function afkOff(name, list, args)
	afk = false
end

function toggleOn(name, list, args)
	Send("config -prompt")
	EnableTriggerGroup("Shipbuilding", true)
	autoBuild = true
	ColourNote("lawngreen", "black", "Shipbuilding activated.")
end

function toggleOff(name, list, args)
	Send("config +prompt")
	EnableTriggerGroup("Shipbuilding", false)
	autoBuild = false
	ColourNote("lawngreen", "black", "Shipbuilding deactivated.")
end

function buildAuto(name, line, args)
	if (args[1] ~= "") then -- arg found
		if (Trim(args[1]) == "on") then -- turn on
			toggleOn()
		elseif (Trim(args[1]) == "off") then -- turn off
			toggleOff()
		else
			ColourNote("red", "black", "Unrecognized argument given to buildAuto: " .. args[1])
		end
	else -- no arg found
		if (autoBuild == false) then -- turn on
			toggleOn()
		else
			toggleOff()
		end
	end
end

function toggleSpamOn(name, list, args)
	EnableTriggerGroup("ShipbuildingSpam", true)
	shipSpam = true
	ColourNote("lawngreen", "black", "Shipbuilding spam gagged.")
end

function toggleSpamOff(name, list, args)
	EnableTriggerGroup("ShipbuildingSpam", false)
	shipSpam = false
	ColourNote("lawngreen", "black", "Shipbuilding spam shown.")
end

function buildSpam(name, line, args)
	if (args[1] ~= "") then -- arg found
		if (Trim(args[1]) == "on") then -- turn on
			toggleSpamOn()
		elseif (Trim(args[1]) == "off") then -- turn off
			toggleSpamOff()
		else
			ColourNote("red", "black", "Unrecognized argument given to buildSpam: " .. args[1])
		end
	else -- no arg found
		if (shipSpam == false) then -- turn on
			toggleSpamOn()
		else
			toggleSpamOff()
		end
	end
end

function TidyUp(name, line, wildcards)
	DeleteLines(1)
end -- function

function clearList(name, line, wildcards)
	shipQueue = {}
	ColourNote("lawngreen", "black", "Ship Build List Cleared!")
end -- function

function disableEndurance(name, line, wildcards)
	EnableTimer("EnduranceMode", false)
	EnableTrigger("ContinueTheShip", true)
	EnableTrigger("FailedBuildShip", true)
	ColourNote("red", "black", "Endurance Mode Deactivated")
	endurance = false
end -- function

function enableEndurance(name, line, wildcards)
	EnableTimer("EnduranceMode", true)
	EnableTrigger("ContinueTheShip", false)
	EnableTrigger("FailedBuildShip", false)
	ColourNote("lawngreen", "black", "Endurance Mode Activated")
	endurance = true
end -- function

function enduranceToggle(name, line, args)
	if (args[1] ~= "") then -- arg found
		if (Trim(args[1]) == "on") then -- turn on
			enableEndurance()
		elseif (Trim(args[1]) == "off") then -- turn off
			disableEndurance()
		else
			ColourNote("red", "black", "Unrecognized argument given to researchauto: " .. args[1])
		end
	else -- no arg found
		if (endurance == false) then -- turn on
			enableEndurance()
		else
			disableEndurance()
		end
	end
end

function OnPluginSaveState()
	SetVariable("hullpart", partNames[1])
	SetVariable("circuitspart", partNames[2])
	SetVariable("weaponspart", partNames[3])
	SetVariable("enginespart", partNames[4])
end -- OnPluginSaveState

function BuildCommandHelp(name, list, wildcards)
	ColourNote("lawngreen", "black", "buildadd #- Add a ship to the build queue")
	ColourNote("lawngreen", "black", "buildclear - Clear the ship queue")
	ColourNote("lawngreen", "black", "buildlist - Display the build queue")
	ColourNote("lawngreen", "black", "buildship - Builds current ship")
	ColourNote("lawngreen", "black", "buildstart - Begin building first ship in list")
	ColourNote("lawngreen", "black", "buildnext - Skip to next ship in the list")
	ColourNote("lawngreen", "black", "buildnextpart - Skip to next part in current ship")
	ColourNote("lawngreen", "black", "buildendurance on/off - Turn the timer setting on and off. Useful for not running out of movement on smaller ships")
	ColourNote("lawngreen", "black", "buildpartname <buildname> <getname> - Change the name of a part name to match the item you pick up")
	ColourNote("lawngreen", "black", "buildpartslist - Display the relations between parts and their pickup names")
	ColourNote("lawngreen", "black", "buildauto on/off - Turn automatic building on or off.")
	ColourNote("lawngreen", "black", "buildspam on/off - Turn the build spam filters on or off.")
end -- function
]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="LotJBuildship:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>